<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <!--Brand Color Style-->
    <Color x:Key="PrimaryColor0.5">#F0F8FF</Color>
    <Color x:Key="PrimaryColor1">#E0EFFE</Color>
    <Color x:Key="PrimaryColor2">#B9E0FE</Color>
    <Color x:Key="PrimaryColor3">#7CC7FD</Color>
    <Color x:Key="PrimaryColor4">#36ACFA</Color>
    <Color x:Key="PrimaryColor5">#0C91EB</Color>
    <Color x:Key="PrimaryColor6">#0078D4</Color>
    <Color x:Key="PrimaryColor7">#005597</Color>
    <Color x:Key="PrimaryColor8">#004578</Color>
    <Color x:Key="PrimaryColor9">#00325A</Color>
    <Color x:Key="PrimaryColor9.5">#00213B</Color>


    <!--Brush Color Style-->
    <SolidColorBrush x:Key="PrimaryBrushColor0">#E3EDFC</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor0.5">#CEDDF3</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor1">#BACEEA</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor1.5">#A5BEE1</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor2">#90AED8</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor3">#678FC7</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor4">#3D6FB5</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor5">#1450A3</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor6">#104082</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor7">#0C3062</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor8">#082041</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor8.5">#061831</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor9">#041021</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor9.5">#020810</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor10">#000000</SolidColorBrush>


    <!--TailWindCSS Default Color Style-->
    <Color x:Key="ColorBlack">#000000</Color>
    <Color x:Key="ColorWhite">#FFFFFF</Color>
    <Color x:Key="ColorSlate50">#F8FAFC</Color>
    <Color x:Key="ColorSlate100">#F1F5F9</Color>
    <Color x:Key="ColorSlate200">#E2E8F0</Color>
    <Color x:Key="ColorSlate300">#CBD5E1</Color>
    <Color x:Key="ColorSlate400">#94A3B8</Color>
    <Color x:Key="ColorSlate500">#64748B</Color>
    <Color x:Key="ColorSlate600">#475569</Color>
    <Color x:Key="ColorSlate700">#334155</Color>
    <Color x:Key="ColorSlate800">#1E293B</Color>
    <Color x:Key="ColorSlate900">#0F172A</Color>
    <Color x:Key="ColorSlate950">#020617</Color>
    <Color x:Key="ColorGray50">#F9FAFB</Color>
    <Color x:Key="ColorGray100">#F3F4F6</Color>
    <Color x:Key="ColorGray200">#E5E7EB</Color>
    <Color x:Key="ColorGray300">#D1D5DB</Color>
    <Color x:Key="ColorGray400">#9CA3AF</Color>
    <Color x:Key="ColorGray500">#6B7280</Color>
    <Color x:Key="ColorGray600">#4B5563</Color>
    <Color x:Key="ColorGray700">#374151</Color>
    <Color x:Key="ColorGray800">#1F2937</Color>
    <Color x:Key="ColorGray900">#111827</Color>
    <Color x:Key="ColorGray950">#030712</Color>
    <Color x:Key="ColorZinc50">#FAFAFA</Color>
    <Color x:Key="ColorZinc100">#F4F4F5</Color>
    <Color x:Key="ColorZinc200">#E4E4E7</Color>
    <Color x:Key="ColorZinc300">#D4D4D8</Color>
    <Color x:Key="ColorZinc400">#A1A1AA</Color>
    <Color x:Key="ColorZinc500">#71717A</Color>
    <Color x:Key="ColorZinc600">#52525B</Color>
    <Color x:Key="ColorZinc700">#3F3F46</Color>
    <Color x:Key="ColorZinc800">#27272A</Color>
    <Color x:Key="ColorZinc900">#18181B</Color>
    <Color x:Key="ColorZinc950">#09090B</Color>
    <Color x:Key="ColorNeutral50">#FAFAFA</Color>
    <Color x:Key="ColorNeutral100">#F5F5F5</Color>
    <Color x:Key="ColorNeutral200">#E5E5E5</Color>
    <Color x:Key="ColorNeutral300">#D4D4D4</Color>
    <Color x:Key="ColorNeutral400">#A3A3A3</Color>
    <Color x:Key="ColorNeutral500">#737373</Color>
    <Color x:Key="ColorNeutral600">#525252</Color>
    <Color x:Key="ColorNeutral700">#404040</Color>
    <Color x:Key="ColorNeutral800">#262626</Color>
    <Color x:Key="ColorNeutral900">#171717</Color>
    <Color x:Key="ColorNeutral950">#0A0A0A</Color>
    <Color x:Key="ColorStone50">#FAFAF9</Color>
    <Color x:Key="ColorStone100">#F5F5F4</Color>
    <Color x:Key="ColorStone200">#E7E5E4</Color>
    <Color x:Key="ColorStone300">#D6D3D1</Color>
    <Color x:Key="ColorStone400">#A8A29E</Color>
    <Color x:Key="ColorStone500">#78716C</Color>
    <Color x:Key="ColorStone600">#57534E</Color>
    <Color x:Key="ColorStone700">#44403C</Color>
    <Color x:Key="ColorStone800">#292524</Color>
    <Color x:Key="ColorStone900">#1C1917</Color>
    <Color x:Key="ColorStone950">#0C0A09</Color>
    <Color x:Key="ColorRed50">#FEF2F2</Color>
    <Color x:Key="ColorRed100">#FEE2E2</Color>
    <Color x:Key="ColorRed200">#FECACA</Color>
    <Color x:Key="ColorRed300">#FCA5A5</Color>
    <Color x:Key="ColorRed400">#F87171</Color>
    <Color x:Key="ColorRed500">#EF4444</Color>
    <Color x:Key="ColorRed600">#DC2626</Color>
    <Color x:Key="ColorRed700">#B91C1C</Color>
    <Color x:Key="ColorRed800">#991B1B</Color>
    <Color x:Key="ColorRed900">#7F1D1D</Color>
    <Color x:Key="ColorRed950">#450A0A</Color>
    <Color x:Key="ColorOrange50">#FFF7ED</Color>
    <Color x:Key="ColorOrange100">#FFEDD5</Color>
    <Color x:Key="ColorOrange200">#FED7AA</Color>
    <Color x:Key="ColorOrange300">#FDBA74</Color>
    <Color x:Key="ColorOrange400">#FB923C</Color>
    <Color x:Key="ColorOrange500">#F97316</Color>
    <Color x:Key="ColorOrange600">#EA580C</Color>
    <Color x:Key="ColorOrange700">#C2410C</Color>
    <Color x:Key="ColorOrange800">#9A3412</Color>
    <Color x:Key="ColorOrange900">#7C2D12</Color>
    <Color x:Key="ColorOrange950">#431407</Color>
    <Color x:Key="ColorAmber50">#FFFBEB</Color>
    <Color x:Key="ColorAmber100">#FEF3C7</Color>
    <Color x:Key="ColorAmber200">#FDE68A</Color>
    <Color x:Key="ColorAmber300">#FCD34D</Color>
    <Color x:Key="ColorAmber400">#FBBF24</Color>
    <Color x:Key="ColorAmber500">#F59E0B</Color>
    <Color x:Key="ColorAmber600">#D97706</Color>
    <Color x:Key="ColorAmber700">#B45309</Color>
    <Color x:Key="ColorAmber800">#92400E</Color>
    <Color x:Key="ColorAmber900">#78350F</Color>
    <Color x:Key="ColorAmber950">#451A03</Color>
    <Color x:Key="ColorYellow50">#FEFCE8</Color>
    <Color x:Key="ColorYellow100">#FEF9C3</Color>
    <Color x:Key="ColorYellow200">#FEF08A</Color>
    <Color x:Key="ColorYellow300">#FDE047</Color>
    <Color x:Key="ColorYellow400">#FACC15</Color>
    <Color x:Key="ColorYellow500">#EAB308</Color>
    <Color x:Key="ColorYellow600">#CA8A04</Color>
    <Color x:Key="ColorYellow700">#A16207</Color>
    <Color x:Key="ColorYellow800">#854D0E</Color>
    <Color x:Key="ColorYellow900">#713F12</Color>
    <Color x:Key="ColorYellow950">#422006</Color>
    <Color x:Key="ColorLime50">#F7FEE7</Color>
    <Color x:Key="ColorLime100">#ECFCCB</Color>
    <Color x:Key="ColorLime200">#D9F99D</Color>
    <Color x:Key="ColorLime300">#BEF264</Color>
    <Color x:Key="ColorLime400">#A3E635</Color>
    <Color x:Key="ColorLime500">#84CC16</Color>
    <Color x:Key="ColorLime600">#65A30D</Color>
    <Color x:Key="ColorLime700">#4D7C0F</Color>
    <Color x:Key="ColorLime800">#3F6212</Color>
    <Color x:Key="ColorLime900">#365314</Color>
    <Color x:Key="ColorLime950">#1A2E05</Color>
    <Color x:Key="ColorGreen50">#F0FDF4</Color>
    <Color x:Key="ColorGreen100">#DCFCE7</Color>
    <Color x:Key="ColorGreen200">#BBF7D0</Color>
    <Color x:Key="ColorGreen300">#86EFAC</Color>
    <Color x:Key="ColorGreen400">#4ADE80</Color>
    <Color x:Key="ColorGreen500">#22C55E</Color>
    <Color x:Key="ColorGreen600">#16A34A</Color>
    <Color x:Key="ColorGreen700">#15803D</Color>
    <Color x:Key="ColorGreen800">#166534</Color>
    <Color x:Key="ColorGreen900">#14532D</Color>
    <Color x:Key="ColorGreen950">#052E16</Color>
    <Color x:Key="ColorEmerald50">#ECFDF5</Color>
    <Color x:Key="ColorEmerald100">#D1FAE5</Color>
    <Color x:Key="ColorEmerald200">#A7F3D0</Color>
    <Color x:Key="ColorEmerald300">#6EE7B7</Color>
    <Color x:Key="ColorEmerald400">#34D399</Color>
    <Color x:Key="ColorEmerald500">#10B981</Color>
    <Color x:Key="ColorEmerald600">#059669</Color>
    <Color x:Key="ColorEmerald700">#047857</Color>
    <Color x:Key="ColorEmerald800">#065F46</Color>
    <Color x:Key="ColorEmerald900">#064E3B</Color>
    <Color x:Key="ColorEmerald950">#022C22</Color>
    <Color x:Key="ColorTeal50">#F0FDFA</Color>
    <Color x:Key="ColorTeal100">#CCFBF1</Color>
    <Color x:Key="ColorTeal200">#99F6E4</Color>
    <Color x:Key="ColorTeal300">#5EEAD4</Color>
    <Color x:Key="ColorTeal400">#2DD4BF</Color>
    <Color x:Key="ColorTeal500">#14B8A6</Color>
    <Color x:Key="ColorTeal600">#0D9488</Color>
    <Color x:Key="ColorTeal700">#0F766E</Color>
    <Color x:Key="ColorTeal800">#115E59</Color>
    <Color x:Key="ColorTeal900">#134E4A</Color>
    <Color x:Key="ColorTeal950">#042F2E</Color>
    <Color x:Key="ColorCyan50">#ECFEFF</Color>
    <Color x:Key="ColorCyan100">#CFFAFE</Color>
    <Color x:Key="ColorCyan200">#A5F3FC</Color>
    <Color x:Key="ColorCyan300">#67E8F9</Color>
    <Color x:Key="ColorCyan400">#22D3EE</Color>
    <Color x:Key="ColorCyan500">#06B6D4</Color>
    <Color x:Key="ColorCyan600">#0891B2</Color>
    <Color x:Key="ColorCyan700">#0E7490</Color>
    <Color x:Key="ColorCyan800">#155E75</Color>
    <Color x:Key="ColorCyan900">#164E63</Color>
    <Color x:Key="ColorCyan950">#083344</Color>
    <Color x:Key="ColorSky50">#F0F9FF</Color>
    <Color x:Key="ColorSky100">#E0F2FE</Color>
    <Color x:Key="ColorSky200">#BAE6FD</Color>
    <Color x:Key="ColorSky300">#7DD3FC</Color>
    <Color x:Key="ColorSky400">#38BDF8</Color>
    <Color x:Key="ColorSky500">#0EA5E9</Color>
    <Color x:Key="ColorSky600">#0284C7</Color>
    <Color x:Key="ColorSky700">#0369A1</Color>
    <Color x:Key="ColorSky800">#075985</Color>
    <Color x:Key="ColorSky900">#0C4A6E</Color>
    <Color x:Key="ColorSky950">#082F49</Color>
    <Color x:Key="ColorBlue50">#EFF6FF</Color>
    <Color x:Key="ColorBlue100">#DBEAFE</Color>
    <Color x:Key="ColorBlue200">#BFDBFE</Color>
    <Color x:Key="ColorBlue300">#93C5FD</Color>
    <Color x:Key="ColorBlue400">#60A5FA</Color>
    <Color x:Key="ColorBlue500">#3B82F6</Color>
    <Color x:Key="ColorBlue600">#2563EB</Color>
    <Color x:Key="ColorBlue700">#1D4ED8</Color>
    <Color x:Key="ColorBlue800">#1E40AF</Color>
    <Color x:Key="ColorBlue900">#1E3A8A</Color>
    <Color x:Key="ColorBlue950">#172554</Color>
    <Color x:Key="ColorIndigo50">#EEF2FF</Color>
    <Color x:Key="ColorIndigo100">#E0E7FF</Color>
    <Color x:Key="ColorIndigo200">#C7D2FE</Color>
    <Color x:Key="ColorIndigo300">#A5B4FC</Color>
    <Color x:Key="ColorIndigo400">#818CF8</Color>
    <Color x:Key="ColorIndigo500">#6366F1</Color>
    <Color x:Key="ColorIndigo600">#4F46E5</Color>
    <Color x:Key="ColorIndigo700">#4338CA</Color>
    <Color x:Key="ColorIndigo800">#3730A3</Color>
    <Color x:Key="ColorIndigo900">#312E81</Color>
    <Color x:Key="ColorIndigo950">#1E1B4B</Color>
    <Color x:Key="ColorViolet50">#F5F3FF</Color>
    <Color x:Key="ColorViolet100">#EDE9FE</Color>
    <Color x:Key="ColorViolet200">#DDD6FE</Color>
    <Color x:Key="ColorViolet300">#C4B5FD</Color>
    <Color x:Key="ColorViolet400">#A78BFA</Color>
    <Color x:Key="ColorViolet500">#8B5CF6</Color>
    <Color x:Key="ColorViolet600">#7C3AED</Color>
    <Color x:Key="ColorViolet700">#6D28D9</Color>
    <Color x:Key="ColorViolet800">#5B21B6</Color>
    <Color x:Key="ColorViolet900">#4C1D95</Color>
    <Color x:Key="ColorViolet950">#2E1065</Color>
    <Color x:Key="ColorPurple50">#FAF5FF</Color>
    <Color x:Key="ColorPurple100">#F3E8FF</Color>
    <Color x:Key="ColorPurple200">#E9D5FF</Color>
    <Color x:Key="ColorPurple300">#D8B4FE</Color>
    <Color x:Key="ColorPurple400">#C084FC</Color>
    <Color x:Key="ColorPurple500">#A855F7</Color>
    <Color x:Key="ColorPurple600">#9333EA</Color>
    <Color x:Key="ColorPurple700">#7E22CE</Color>
    <Color x:Key="ColorPurple800">#6B21A8</Color>
    <Color x:Key="ColorPurple900">#581C87</Color>
    <Color x:Key="ColorPurple950">#3B0764</Color>
    <Color x:Key="ColorFuchsia50">#FDF4FF</Color>
    <Color x:Key="ColorFuchsia100">#FAE8FF</Color>
    <Color x:Key="ColorFuchsia200">#F5D0FE</Color>
    <Color x:Key="ColorFuchsia300">#F0ABFC</Color>
    <Color x:Key="ColorFuchsia400">#E879F9</Color>
    <Color x:Key="ColorFuchsia500">#D946EF</Color>
    <Color x:Key="ColorFuchsia600">#C026D3</Color>
    <Color x:Key="ColorFuchsia700">#A21CAF</Color>
    <Color x:Key="ColorFuchsia800">#86198F</Color>
    <Color x:Key="ColorFuchsia900">#701A75</Color>
    <Color x:Key="ColorFuchsia950">#4A044E</Color>
    <Color x:Key="ColorPink50">#FDF2F8</Color>
    <Color x:Key="ColorPink100">#FCE7F3</Color>
    <Color x:Key="ColorPink200">#FBCFE8</Color>
    <Color x:Key="ColorPink300">#F9A8D4</Color>
    <Color x:Key="ColorPink400">#F472B6</Color>
    <Color x:Key="ColorPink500">#EC4899</Color>
    <Color x:Key="ColorPink600">#DB2777</Color>
    <Color x:Key="ColorPink700">#BE185D</Color>
    <Color x:Key="ColorPink800">#9D174D</Color>
    <Color x:Key="ColorPink900">#831843</Color>
    <Color x:Key="ColorPink950">#500724</Color>
    <Color x:Key="ColorRose50">#FFF1F2</Color>
    <Color x:Key="ColorRose100">#FFE4E6</Color>
    <Color x:Key="ColorRose200">#FECDD3</Color>
    <Color x:Key="ColorRose300">#FDA4AF</Color>
    <Color x:Key="ColorRose400">#FB7185</Color>
    <Color x:Key="ColorRose500">#F43F5E</Color>
    <Color x:Key="ColorRose600">#E11D48</Color>
    <Color x:Key="ColorRose700">#BE123C</Color>
    <Color x:Key="ColorRose800">#9F1239</Color>
    <Color x:Key="ColorRose900">#881337</Color>
    <Color x:Key="ColorRose950">#4C0519</Color>

    <!-- Border Radius Styles -->
    <Style x:Key="BorderRadiusNone" TargetType="Border">
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style x:Key="BorderRadiusSm" TargetType="Border">
        <Setter Property="CornerRadius" Value="2"/>
    </Style>

    <Style x:Key="BorderRadius" TargetType="Border">
        <Setter Property="CornerRadius" Value="4"/>
    </Style>

    <Style x:Key="BorderRadiusMd" TargetType="Border">
        <Setter Property="CornerRadius" Value="6"/>
    </Style>

    <Style x:Key="BorderRadiusLg" TargetType="Border">
        <Setter Property="CornerRadius" Value="8"/>
    </Style>

    <Style x:Key="BorderRadiusXl" TargetType="Border">
        <Setter Property="CornerRadius" Value="12"/>
    </Style>

    <Style x:Key="BorderRadius2Xl" TargetType="Border">
        <Setter Property="CornerRadius" Value="16"/>
    </Style>

    <Style x:Key="BorderRadius3Xl" TargetType="Border">
        <Setter Property="CornerRadius" Value="24"/>
    </Style>

    <Style x:Key="BorderRadiusFull" TargetType="Border">
        <Setter Property="CornerRadius" Value="9999"/>
    </Style>

    <!-- Padding Styles -->
    <Style x:Key="Spacing0" TargetType="Border">
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="Spacing0.5" TargetType="Border">
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style x:Key="Spacing1" TargetType="Border">
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style x:Key="Spacing1.5" TargetType="Border">
        <Setter Property="Padding" Value="6"/>
    </Style>

    <Style x:Key="Spacing2" TargetType="Border">
        <Setter Property="Padding" Value="8"/>
    </Style>

    <Style x:Key="Spacing2.5" TargetType="Border">
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style x:Key="Spacing3" TargetType="Border">
        <Setter Property="Padding" Value="12"/>
    </Style>

    <Style x:Key="Spacing3.5" TargetType="Border">
        <Setter Property="Padding" Value="14"/>
    </Style>

    <Style x:Key="Spacing4" TargetType="Border">
        <Setter Property="Padding" Value="16"/>
    </Style>

    <Style x:Key="Spacing4.5" TargetType="Border">
        <Setter Property="Padding" Value="18"/>
    </Style>

    <Style x:Key="Spacing5" TargetType="Border">
        <Setter Property="Padding" Value="20"/>
    </Style>

    <Style x:Key="Spacing5.5" TargetType="Border">
        <Setter Property="Padding" Value="22"/>
    </Style>

    <Style x:Key="Spacing6" TargetType="Border">
        <Setter Property="Padding" Value="24"/>
    </Style>

    <Style x:Key="Spacing6.5" TargetType="Border">
        <Setter Property="Padding" Value="26"/>
    </Style>

    <Style x:Key="Spacing7" TargetType="Border">
        <Setter Property="Padding" Value="28"/>
    </Style>

    <Style x:Key="Spacing7.5" TargetType="Border">
        <Setter Property="Padding" Value="30"/>
    </Style>

    <Style x:Key="Spacing8" TargetType="Border">
        <Setter Property="Padding" Value="32"/>
    </Style>

    <Style x:Key="Spacing8.5" TargetType="Border">
        <Setter Property="Padding" Value="34"/>
    </Style>

    <Style x:Key="Spacing9" TargetType="Border">
        <Setter Property="Padding" Value="36"/>
    </Style>

    <Style x:Key="Spacing9.5" TargetType="Border">
        <Setter Property="Padding" Value="38"/>
    </Style>

    <Style x:Key="Spacing10" TargetType="Border">
        <Setter Property="Padding" Value="40"/>
    </Style>


    <!-- Grid Row Gap Styles -->
    <Style x:Key="RowGapSpacing0" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>

    <Style x:Key="RowGapSpacing0.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 2 0"/>
    </Style>

    <Style x:Key="RowGapSpacing1" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 4 0"/>
    </Style>

    <Style x:Key="RowGapSpacing1.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 6 0"/>
    </Style>

    <Style x:Key="RowGapSpacing2" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 8 0"/>
    </Style>

    <Style x:Key="RowGapSpacing2.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 10 0"/>
    </Style>

    <Style x:Key="RowGapSpacing3" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 12 0"/>
    </Style>

    <Style x:Key="RowGapSpacing3.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 14 0"/>
    </Style>

    <Style x:Key="RowGapSpacing4" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 16 0"/>
    </Style>

    <Style x:Key="RowGapSpacing4.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 18 0"/>
    </Style>

    <Style x:Key="RowGapSpacing5" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 20 0"/>
    </Style>

    <!-- Grid Column Gap Styles -->
    <Style x:Key="ColumnGapSpacing0" TargetType="Grid">
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing0.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 2 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing1" TargetType="Grid">
        <Setter Property="Margin" Value="0 4 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing1.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 6 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing2" TargetType="Grid">
        <Setter Property="Margin" Value="0 8 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing2.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 10 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing3" TargetType="Grid">
        <Setter Property="Margin" Value="0 12 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing3.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 14 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing4" TargetType="Grid">
        <Setter Property="Margin" Value="0 16 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing4.5" TargetType="Grid">
        <Setter Property="Margin" Value="0 18 0 0"/>
    </Style>

    <Style x:Key="ColumnGapSpacing5" TargetType="Grid">
        <Setter Property="Margin" Value="0 20 0 0"/>
    </Style>


    <!--Allow text selection for static text-->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="JarvisPrimaryButton" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Background" Value="#1450A3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
    </Style>

    <Style x:Key="AIBubbleButton" TargetType="Button">
        <Setter Property="Width" Value="38"/>
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Background" Value="#D7E7F8"/>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1.75"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="4 4 4 6"
                                CornerRadius="12 0 0 12">
                            <ContentPresenter HorizontalAlignment="Center" />
                        </Border>

                        <Popup IsOpen="{TemplateBinding IsMouseOver}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                               HorizontalOffset="-11" VerticalOffset="9" Placement="Top" AllowsTransparency="True">
                            <Button Command="{Binding HideAIChatBubbleCommand}" CommandParameter="false">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Width" Value="16"/>
                                        <Setter Property="Height" Value="16"/>
                                        <Setter Property="Background" Value="#D7E7F8"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Background="{TemplateBinding Background}"
                                                            CornerRadius="20">
                                                        <ContentPresenter HorizontalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#E6EEFA"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Content>
                                    <Image Source="../../../../Assets/Images/cross.png" Width="12" Height="12"/>
                                </Button.Content>
                            </Button>
                            
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D7E7F8"/>
                <Setter Property="Width" Value="42"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuUndoRedoButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                    StartPoint="0,1" EndPoint="0,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                            <TranslateTransform Y="0.5"/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0222"/>
                            <GradientStop Color="#E6EEFA" Offset="0.2964"/>
                            <GradientStop Color="#E6EEFA" Offset="0.5804"/>
                            <GradientStop Color="#D3E3F9" Offset="0.9623"/>
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>

        </Setter>

        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                            StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                    <TranslateTransform Y="0.5"/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0222"/>
                                    <GradientStop Color="#E6EEFA" Offset="0.2964"/>
                                    <GradientStop Color="#E6EEFA" Offset="0.5804"/>
                                    <GradientStop Color="#D3E3F9" Offset="0.9623"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="1" Color="#E6EEFA"/>
                            <GradientStop Offset="0" Color="#E6EEFA"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MenuTopButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                    StartPoint="0,1" EndPoint="0,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                            <TranslateTransform Y="0.5"/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#D3E2F9" Offset="0.1468"/>
                            <GradientStop Color="#D7E7F8" Offset="1"/>
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="10">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
            </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                            StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                    <TranslateTransform Y="0.5"/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#D3E2F9" Offset="0.1468"/>
                                    <GradientStop Color="#D7E7F8" Offset="1"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="JarvisOperationButton" TargetType="Button">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Padding" Value="11.4 1.5 11.4 1.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="10">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JarvisNomalButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="{StaticResource PrimaryColor1}"/>
                                        <GradientStop Offset="1" Color="#E6EEFA"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#CFD1D4"/>
                                        <GradientStop Offset="1" Color="#E6EEFA"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="Transparent"
                  BorderThickness="0,0,1,0" />
            <Image Grid.Column="1" Source="../../../../Assets/Images/navigate_next.png" Width="16" Margin="0 0 0 0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    

    <Style x:Key="JarvisComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#082041"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1"
                                    BorderBrush="#DDDDDD"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">s
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        --><!--<Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Red"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                        </Trigger>--><!--
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="AskButtonBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTextEmpty}" Value="True">
                <Setter Property="Background" Value="#9CA3AF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTextEmpty}" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0.142" Color="#1450A2"/>
                            <GradientStop Offset="0.858" Color="#4495FB"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
        </Style.Triggers>
    </Style>

    <Style x:Key="AIChatButtonBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTextEmptyAIChat}" Value="True">
                <Setter Property="Background" Value="#9CA3AF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTextEmptyAIChat}" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0.142" Color="#1450A2"/>
                            <GradientStop Offset="0.858" Color="#4495FB"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="AskButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="SpinAnimation">
        <DoubleAnimation
        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
        From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
    </Storyboard>

    <Style x:Key="AIChatMessageBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBorderVisible}" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="0" Color="#08FFFFFF" />
                            <GradientStop Offset="0.426" Color="#FFF" />
                            <GradientStop Offset="0.526" Color="#FFF" />
                            <GradientStop Offset="1" Color="#08FFFFFF" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBorderVisible}" Value="False">
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="sans-serif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#082041"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            CornerRadius="{Binding CornerRadius}"
                            Width="38" Height="28">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>

                        <Popup Name="PopupMessage" Placement="Center" VerticalOffset="-32" 
                               AllowsTransparency="True" PopupAnimation="Fade">
                            <Border CornerRadius="10" Background="#202020" Width="Auto" Height="28" Padding="7 6 7 6" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Content}" Foreground="White"
                                            FontFamily="monica-ext-font_YIBBBFG, -apple-system, 'system-ui', 'Segoe UI'"/>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PopupMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="sans-serif"/>
        <Setter Property="Foreground" Value="#082041"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupMenuButtonPin" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8" Width="24" Height="24">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#cfd6fc"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupTextMenuBorder" TargetType="Border">
        <Setter Property="Background" Value="#D7E7FF"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#b8c7e0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoMouseOverStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="UpgradePlanButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                    StartPoint="0,0" EndPoint="1,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#2345a5" Offset="0"/>
                            <GradientStop Color="#4495FB" Offset="1"/>
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                            StartPoint="0,0" EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#2345a5" Offset="0"/>
                                    <GradientStop Color="#4495FB" Offset="1"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextMenuAPIButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" VerticalAlignment="Center"/>
                        </Border>

                        <Popup Name="PopupMessage" Placement="Center" VerticalOffset="-32" AllowsTransparency="True">
                            <Border CornerRadius="10" Background="#202020" Width="Auto" Height="28" Padding="7 6 7 6" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Name}" 
                                           Foreground="White" FontFamily="monica-ext-font_YIBBBFG, -apple-system, 'system-ui', 'Segoe UI'"/>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Background="#f0f4fa" 
                        SnapsToDevicePixels="True" Width="6" CornerRadius="4"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="#f0f4fa"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="#f0f4fa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="0" CornerRadius="10" Grid.RowSpan="2"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="0" Grid.RowSpan="2">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GridIsAPIUsageRemain" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAPIUsageRemain}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAPIUsageRemain}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridIsNoAPIUsageRemain" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsNoAPIUsageRemain}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsNoAPIUsageRemain}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="JarvisPrimaryWindowBorder" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFFFFF" Offset="0"/>
                        <GradientStop Color="#F2F6FC" Offset="0.1658"/>
                        <GradientStop Color="#F1F5FC" Offset="0.1659"/>
                        <GradientStop Color="#F2F6FC" Offset="0.1902"/>
                        <GradientStop Color="#F2F6FC" Offset="0.1903"/>
                        <GradientStop Color="#F0F5FC" Offset="0.1904"/>
                        <GradientStop Color="#EEF4FC" Offset="0.2099"/>
                        <GradientStop Color="#EEF4FC" Offset="0.21"/>
                        <GradientStop Color="#ECF2FB" Offset="0.2295"/>
                        <GradientStop Color="#EBF1FB" Offset="0.2296"/>
                        <GradientStop Color="#D7E7F8" Offset="1"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="20"/>
    </Style>

</ResourceDictionary>
