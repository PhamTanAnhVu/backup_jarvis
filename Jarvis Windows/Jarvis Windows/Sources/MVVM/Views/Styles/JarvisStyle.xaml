<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <SolidColorBrush x:Key="PrimaryBrushColor0.5">#AEC9EF</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor1">#9DBBE6</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor2">#7BA0D5</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor3">#5886C5</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor4">#366BB4</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor5">#1450A3</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor6">#104082</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor7">#0C3062</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor8">#082041</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor9">#041021</SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrushColor9.5">#020810</SolidColorBrush>

    <Color x:Key="PrimaryColor0.5">#AEC9EF</Color>
    <Color x:Key="PrimaryColor1">#9DBBE6</Color>
    <Color x:Key="PrimaryColor2">#7BA0D5</Color>
    <Color x:Key="PrimaryColor3">#5886C5</Color>
    <Color x:Key="PrimaryColor4">#366BB4</Color>
    <Color x:Key="PrimaryColor5">#1450A3</Color>
    <Color x:Key="PrimaryColor6">#104082</Color>
    <Color x:Key="PrimaryColor7">#0C3062</Color>
    <Color x:Key="PrimaryColor8">#082041</Color>
    <Color x:Key="PrimaryColor9">#041021</Color>
    <Color x:Key="PrimaryColor9.5">#020810</Color>

    <!--Allow text selection for static text-->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="JarvisPrimaryButton" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Background" Value="#1450A3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
    </Style>

    <Style x:Key="AIBubbleButton" TargetType="Button">
        <Setter Property="Width" Value="38"/>
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Background" Value="#D7E7F8"/>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1.75"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="4 4 4 6"
                                CornerRadius="12 0 0 12">
                            <ContentPresenter HorizontalAlignment="Center" />
                        </Border>

                        <Popup IsOpen="{TemplateBinding IsMouseOver}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                               HorizontalOffset="-11" VerticalOffset="9" Placement="Top" AllowsTransparency="True">
                            <Button Command="{Binding HideAIChatBubbleCommand}" CommandParameter="false">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Width" Value="16"/>
                                        <Setter Property="Height" Value="16"/>
                                        <Setter Property="Background" Value="#D7E7F8"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Background="{TemplateBinding Background}"
                                                            CornerRadius="20">
                                                        <ContentPresenter HorizontalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#E6EEFA"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Content>
                                    <Image Source="../../../../Assets/Images/cross.png" Width="12" Height="12"/>
                                </Button.Content>
                            </Button>
                            
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D7E7F8"/>
                <Setter Property="Width" Value="42"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuUndoRedoButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                    StartPoint="0,1" EndPoint="0,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                            <TranslateTransform Y="0.5"/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0222"/>
                            <GradientStop Color="#E6EEFA" Offset="0.2964"/>
                            <GradientStop Color="#E6EEFA" Offset="0.5804"/>
                            <GradientStop Color="#D3E3F9" Offset="0.9623"/>
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>

        </Setter>

        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                            StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                    <TranslateTransform Y="0.5"/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0222"/>
                                    <GradientStop Color="#E6EEFA" Offset="0.2964"/>
                                    <GradientStop Color="#E6EEFA" Offset="0.5804"/>
                                    <GradientStop Color="#D3E3F9" Offset="0.9623"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="1" Color="#E6EEFA"/>
                            <GradientStop Offset="0" Color="#E6EEFA"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MenuTopButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                    StartPoint="0,1" EndPoint="0,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                            <TranslateTransform Y="0.5"/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#D3E2F9" Offset="0.1468"/>
                            <GradientStop Color="#D7E7F8" Offset="1"/>
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="10">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
            </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                            StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <RotateTransform CenterY="0.5" CenterX="0.5" Angle="111"/>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                    <TranslateTransform Y="0.5"/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#D3E2F9" Offset="0.1468"/>
                                    <GradientStop Color="#D7E7F8" Offset="1"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="JarvisOperationButton" TargetType="Button">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Padding" Value="11.4 1.5 11.4 1.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="10">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JarvisNomalButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="{StaticResource PrimaryColor1}"/>
                                        <GradientStop Offset="1" Color="#E6EEFA"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#CFD1D4"/>
                                        <GradientStop Offset="1" Color="#E6EEFA"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="Transparent"
                  BorderThickness="0,0,1,0" />
            <Image Grid.Column="1" Source="../../../../Assets/Images/navigate_next.png" Width="16" Margin="0 0 0 0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    

    <Style x:Key="JarvisComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#082041"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1"
                                    BorderBrush="#DDDDDD"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">s
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        --><!--<Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Red"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                        </Trigger>--><!--
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="AskButtonBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTextEmpty}" Value="True">
                <Setter Property="Background" Value="#9CA3AF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTextEmpty}" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0.142" Color="#1450A2"/>
                            <GradientStop Offset="0.858" Color="#4495FB"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
        </Style.Triggers>
    </Style>

    <Style x:Key="AIChatButtonBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTextEmptyAIChat}" Value="True">
                <Setter Property="Background" Value="#9CA3AF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTextEmptyAIChat}" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0.142" Color="#1450A2"/>
                            <GradientStop Offset="0.858" Color="#4495FB"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="AskButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="SpinAnimation">
        <DoubleAnimation
        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
        From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
    </Storyboard>

    <Style x:Key="AIChatMessageBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBorderVisible}" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="0" Color="#08FFFFFF" />
                            <GradientStop Offset="0.426" Color="#FFF" />
                            <GradientStop Offset="0.526" Color="#FFF" />
                            <GradientStop Offset="1" Color="#08FFFFFF" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBorderVisible}" Value="False">
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="sans-serif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#082041"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            CornerRadius="{Binding CornerRadius}"
                            Width="38" Height="28">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>

                        <Popup Name="PopupMessage" Placement="Center" VerticalOffset="-32" AllowsTransparency="True">
                            <Border CornerRadius="10" Background="#202020" Width="Auto" Height="28" Padding="7 6 7 6" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Content}" Foreground="White"
                                            FontFamily="monica-ext-font_YIBBBFG, -apple-system, 'system-ui', 'Segoe UI'"/>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PopupMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="sans-serif"/>
        <Setter Property="Foreground" Value="#082041"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupMenuButtonPin" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8" Width="24" Height="24">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupTextMenuBorder" TargetType="Border">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#9CA3AF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoMouseOverStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="UpgradePlanButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                    StartPoint="0,0" EndPoint="1,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#2345a5" Offset="0"/>
                            <GradientStop Color="#4495FB" Offset="1"/>
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" 
                                            StartPoint="0,0" EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#2345a5" Offset="0"/>
                                    <GradientStop Color="#4495FB" Offset="1"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextMenuAPIButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter" VerticalAlignment="Center"/>
                        </Border>

                        <Popup Name="PopupMessage" Placement="Center" VerticalOffset="-32" AllowsTransparency="True">
                            <Border CornerRadius="10" Background="#202020" Width="Auto" Height="28" Padding="7 6 7 6" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Name}" 
                                           Foreground="White" FontFamily="monica-ext-font_YIBBBFG, -apple-system, 'system-ui', 'Segoe UI'"/>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PopupMessage" Property="IsOpen" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Background="LightGray" 
                        SnapsToDevicePixels="True" Width="6" CornerRadius="4"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="0" CornerRadius="10" Grid.RowSpan="2"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="0" Grid.RowSpan="2">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GridIsAPIUsageRemain" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAPIUsageRemain}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAPIUsageRemain}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridIsNoAPIUsageRemain" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsNoAPIUsageRemain}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsNoAPIUsageRemain}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
